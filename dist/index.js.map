{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","exposedHeaders","config","corsHeaders","bodyParser","json","limit","bodyLimit","db","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,oBAAK;AACZC,iBAAgBC,iBAAOC;AADX,CAAL,CAAR;;AAIAP,IAAII,GAAJ,CAAQI,qBAAWC,IAAX,CAAgB;AACvBC,QAAQJ,iBAAOK;AADQ,CAAhB,CAAR;;AAIA;AACA,kBAAc,cAAM;;AAEnB;AACAX,KAAII,GAAJ,CAAQ,0BAAW,EAAEE,wBAAF,EAAUM,MAAV,EAAX,CAAR;;AAEA;AACAZ,KAAII,GAAJ,CAAQ,GAAR,EAAa,mBAAI,EAAEE,wBAAF,EAAUM,MAAV,EAAJ,CAAb;;AAEAZ,KAAIC,MAAJ,CAAWY,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBV,iBAAOW,IAA7C,EAAmD,YAAM;AACxDC,UAAQC,GAAR,sBAA+BnB,IAAIC,MAAJ,CAAWmB,OAAX,GAAqBH,IAApD;AACA,EAFD;AAGA,CAXD;;kBAaejB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport initializeDb from './db';\r\nimport middleware from './middleware';\r\nimport api from './api';\r\nimport config from './config.json';\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\n\r\n// 3rd party middleware\r\napp.use(cors({\r\n\texposedHeaders: config.corsHeaders\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n\tlimit : config.bodyLimit\r\n}));\r\n\r\n// connect to db\r\ninitializeDb( db => {\r\n\r\n\t// internal middleware\r\n\tapp.use(middleware({ config, db }));\r\n\r\n\t// api router\r\n\tapp.use('/', api({ config, db }));\r\n\r\n\tapp.server.listen(process.env.PORT || config.port, () => {\r\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\r\n\t});\r\n});\r\n\r\nexport default app;\r\n"]}