{"version":3,"sources":["../../src/api/facets.js"],"names":["config","db","id","load","req","callback","facet","facets","find","err","index","res","params","json","create","body","length","toString","push","read","update","key","sendStatus","delete","splice","indexOf"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AAAA,KAAGA,MAAH,QAAGA,MAAH;AAAA,KAAWC,EAAX,QAAWA,EAAX;AAAA,QAAoB,wCAAS;;AAE3C;AACAC,MAAK,OAHsC;;AAK3C;;;AAGAC,MAR2C,gBAQtCC,GARsC,EAQjCF,EARiC,EAQ7BG,QAR6B,EAQnB;AACvB,OAAIC,QAAQC,iBAAOC,IAAP,CAAa;AAAA,WAASF,MAAMJ,EAAN,KAAWA,EAApB;AAAA,IAAb,CAAZ;AAAA,OACCO,MAAMH,QAAQ,IAAR,GAAe,WADtB;AAEAD,YAASI,GAAT,EAAcH,KAAd;AACA,GAZ0C;;;AAc3C;AACAI,OAf2C,wBAezBC,GAfyB,EAepB;AAAA,OAAfC,MAAe,SAAfA,MAAe;;AACtBD,OAAIE,IAAJ,CAASN,gBAAT;AACA,GAjB0C;;;AAmB3C;AACAO,QApB2C,yBAoB1BH,GApB0B,EAoBrB;AAAA,OAAbI,IAAa,SAAbA,IAAa;;AACrBA,QAAKb,EAAL,GAAUK,iBAAOS,MAAP,CAAcC,QAAd,CAAuB,EAAvB,CAAV;AACAV,oBAAOW,IAAP,CAAYH,IAAZ;AACAJ,OAAIE,IAAJ,CAASE,IAAT;AACA,GAxB0C;;;AA0B3C;AACAI,MA3B2C,uBA2B3BR,GA3B2B,EA2BtB;AAAA,OAAdL,KAAc,SAAdA,KAAc;;AACpBK,OAAIE,IAAJ,CAASP,KAAT;AACA,GA7B0C;;;AA+B3C;AACAc,QAhC2C,yBAgCnBT,GAhCmB,EAgCd;AAAA,OAApBL,KAAoB,SAApBA,KAAoB;AAAA,OAAbS,IAAa,SAAbA,IAAa;;AAC5B,QAAK,IAAIM,GAAT,IAAgBN,IAAhB,EAAsB;AACrB,QAAIM,QAAM,IAAV,EAAgB;AACff,WAAMe,GAAN,IAAaN,KAAKM,GAAL,CAAb;AACA;AACD;AACDV,OAAIW,UAAJ,CAAe,GAAf;AACA,GAvC0C;;;AAyC3C;AACAC,QA1C2C,0BA0CzBZ,GA1CyB,EA0CpB;AAAA,OAAdL,KAAc,SAAdA,KAAc;;AACtBC,oBAAOiB,MAAP,CAAcjB,iBAAOkB,OAAP,CAAenB,KAAf,CAAd,EAAqC,CAArC;AACAK,OAAIW,UAAJ,CAAe,GAAf;AACA;AA7C0C,EAAT,CAApB;AAAA,C","file":"facets.js","sourcesContent":["import resource from 'resource-router-middleware';\r\nimport facets from '../models/facets';\r\n\r\nexport default ({ config, db }) => resource({\r\n\r\n\t/** Property name to store preloaded entity on `request`. */\r\n\tid : 'facet',\r\n\r\n\t/** For requests with an `id`, you can auto-load the entity.\r\n\t *  Errors terminate the request, success sets `req[id] = data`.\r\n\t */\r\n\tload(req, id, callback) {\r\n\t\tlet facet = facets.find( facet => facet.id===id ),\r\n\t\t\terr = facet ? null : 'Not found';\r\n\t\tcallback(err, facet);\r\n\t},\r\n\r\n\t/** GET / - List all entities */\r\n\tindex({ params }, res) {\r\n\t\tres.json(facets);\r\n\t},\r\n\r\n\t/** POST / - Create a new entity */\r\n\tcreate({ body }, res) {\r\n\t\tbody.id = facets.length.toString(36);\r\n\t\tfacets.push(body);\r\n\t\tres.json(body);\r\n\t},\r\n\r\n\t/** GET /:id - Return a given entity */\r\n\tread({ facet }, res) {\r\n\t\tres.json(facet);\r\n\t},\r\n\r\n\t/** PUT /:id - Update a given entity */\r\n\tupdate({ facet, body }, res) {\r\n\t\tfor (let key in body) {\r\n\t\t\tif (key!=='id') {\r\n\t\t\t\tfacet[key] = body[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\tres.sendStatus(204);\r\n\t},\r\n\r\n\t/** DELETE /:id - Delete a given entity */\r\n\tdelete({ facet }, res) {\r\n\t\tfacets.splice(facets.indexOf(facet), 1);\r\n\t\tres.sendStatus(204);\r\n\t}\r\n});\r\n"]}